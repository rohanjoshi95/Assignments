Assignment

2. Find a image from dockerhub of your choice(recommeded: nginx), don't use browser, pull the official image from dockerhub
--> docker pull nginx:latest

3. List all the available images in your machine/vm, make sure you see recently pulled image in the list.
--> docker images

4. Find out the "Full" ImageId of the image that you pulled and write it below.
--> docker images nginx -q

5. Create a container of your image 
--> docker run -d -p 80:80 nginx:latest

6. List all the running containers
--> docker ps -a -f "status=running"

7. List all the running and stopped containers
--> docker ps -a -f "status=running" -f "status=exited"

8. Find out the "Full" containerId of the container and write it below.
--> docker ps -q --filter ancestor=nginx:latest

9. Find out how many image layers are used to build this image.
--> docker history nginx:latest

10. Get the Apache Tomcat 7 server image from the docker hub.
--> docker pull tomcat:7.0

11. Run the Apache Tomcat 7, I mean create a container of Apache Tomcat.
--> docker run -d -p 8080:8080 tomcat:7.0

12. Find out what is the IP Address of the Apache Tomcat Container that it is running on
--> docker ps -a

13. Which Port it is using?
--> 8080

14. Try to access the Tomcat's home page from your machine/vm.
--> localhost:8080

15. What is the disk size of Apache Tomcat image?
--> docker ps --size --filter ancestor=tomcat ---->> size= 43.2kB(virtual 647MB)

16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?
--> docker exec <cont_id> env
    JAVA_HOME=/usr/local/openjdk-11
    CATALINA_HOME=/usr/local/tomcat

17. Find out which port is exposed for tomcat?
--> 8080

18. Run multiple conntainers of tomcat on different port and access it's home page.
--> docker run -d -p 8080:8083 tomcat:latest
    docker run -d -p 8080:8086 tomcat:latest

19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.
--> docker pull ubuntu:18.04
    docker pull ubuntu:19.10

20. Run the container of ubuntu in attached mode.
--> docker run -i -t c3c304cb4f22 /bin/bash

21. Run the container of another ubuntu in detached mode.
--> docker run -d -i -t 1d654303ff59 /bin/bash

22. Check how many ubuntu containers are running and stopped
--> detached one is running.

23. Is the tomcat container running? If no, start one.
--> docker run -d -p 8080:8080 <image_id>

24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).
--> docker logs d42fa1721bea

25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.
--> docker run -i -t 1d654303ff59 /bin/bash

26. Login as root user in ubuntu container
--> docker attach a227fd88fba4

27. Create a file with any name in root directory
--> touch test.txt

28. Install software of your choice in ubuntu container using "apt-get install"
--> apt-get install git

29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.
--> exit

30. Check if the ubuntu container is running.
--> docker ps -a -->>Not running

31. Create a new ubuntu container out of the same image as that previous container in attached mode.
--> docker run -i -t 1d654303ff59 /bin/bash

32. Login as a root user
--> docker attach a227fd88fba4

33. Check if you can see the file created in previous container, you will not see the file as well as software that you installed in the previous container. Now kill this Container.
--> git is not there

34. Do you have the previous ubuntu container where you created the file and installed the software? If no reapeat step 25 to 29.
35. Create an Image out of the existing container.
--> docker commit a227fd88fba4 ubuntu:lat

36. Now Create a Container out of this image and login into it to see if you can see the file and software installed by you in the previous container.
--> docker run -i -t c0e94e8e99bb /bin/bash -->> yes, file and git is there

37. Do you have running tomcat container? If yes, Stop it and kill all tomcat container.
--> docker stop <cont_id>
    docker rm <cont_it>

38. Create an index.html file with following code in it:-
	<h1>This is Tomcat Container</h1>
Now, Start a tomcat container in such a way that on hitting its URL for home page it should show the above html page.
--> docker run -d -p 8080:8080 -v C:\IMP:/usr/share/tomcat/html 4392e5dad77d

39. type below command:-
	docker images --help
Now, try to run command that proves the concept of following three options:-
1. -a --> docker images -a 		            --> Shows all images including hidden images
2. -f --> docker images -f "reference=demo-app"     --> Filter images according to condition
3. -q --> docker images -q -f "reference=demo-app"  --> Only shows image Id 

write atleast 1 command using each option above and prove their concepts as described in the --help.

40. type below command:-
	docker ps --help
Now, try to run command that proves the concept of following six options:-
1. -a --> docker ps -a                     --> Shows all containers
2. -f --> docker ps -f "status=running"    --> Filters according to condition
3. -q --> docker ps -f -q "status=running" --> Shows only container Id
4. -n --> docker ps -n 2                   --> Shows last 2 containers created 
5. -l --> docker ps -l                     --> Shows latest created container
6. -s --> docker ps -s                     --> Shows total file size of the running container

