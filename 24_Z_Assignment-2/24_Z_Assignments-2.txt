Using Join and Count to Create Multiple S3 Buckets

Find three files as below:-

main.tf :-
---------
provider "aws" {
  region = "${var.aws_region}"
}

resource "random_id" "tf_bucket_id" {
  byte_length = 2
}

resource "aws_s3_bucket" "tf_code" {
    bucket        = "${var.project_name}-${random_id.tf_bucket_id.dec}"
    acl           = "private"

    force_destroy =  true

    tags {
      Name = "tf_bucket"
    }
}


variables.tf:-
--------------
variable "aws_region" {
  default = "us-east-1"
}

variable "project_name" {
  default = "la-terraform"
}


outputs.tf:-
-------------
output "bucketname" {
  value = "${aws_s3_bucket.tf_code.id}"
}



Update the Variables File:-
Edit variables.tf.
Add a new variable number_of_instances.
Set the the default to 2.

Update the Main File:-
Update random_id and add a count.
Set the value count to use the number_of_instances variable.
Update aws_s3_bucket and add a count.
Update random_id.tf_bucket_id.dec so it iterates through the count. Update the Name tag so that tf_bucket is appended with the count index plus one.

Update the Outputs File:-
Update the bucketname output value to use the join function so that it returns a comma delimited list of bucket names.

Deploy the Infrastructure:-
Initialize Terraform.
Validate the files.
Deploy the S3 buckets.